Link to the Jupyter Notebook: https://dataplatform.cloud.ibm.com/analytics/notebooks/v2/8e6dfb87-36f2-4058-8df4-71b4230e2795/view?access_token=3496986a6f17d7d19248f0dee51b5bbf89a836bab1be3b86e47ffadff46471a9
--- Query 1A ---
SELECT LOCATION, DATE, TOTAL_CASES, NEW_CASES, TOTAL_DEATHS, POPULATION
  FROM COVID_DEATH_DATA
  WHERE LOCATION LIKE 'Canada'
;
--- Query 1B ---
SELECT LOCATION, DATE, TOTAL_CASES, TOTAL_DEATHS, (CAST(TOTAL_DEATHS AS FLOAT)/CAST(TOTAL_CASES AS FLOAT))*100 AS DEATH_PERCENTAGE
  FROM COVID_DEATH_DATA
  WHERE LOCATION LIKE 'Canada' AND TOTAL_DEATHS IS NOT NULL
;	
--- Query 2A ---	
SELECT LOCATION, DATE, POPULATION, TOTAL_CASES, (CAST(TOTAL_CASES AS FLOAT)/CAST(POPULATION AS FLOAT))*100 AS CASE_PERCENTAGE
  FROM COVID_DEATH_DATA
  WHERE LOCATION = 'Canada' AND TOTAL_DEATHS IS NOT NULL AND CONTINENT IS NOT NULL
;
--- Query 2B ---
SELECT LOCATION, POPULATION, MAX(TOTAL_CASES) AS HIGHEST_INFECTION_COUNT, MAX((CAST(TOTAL_CASES AS FLOAT)/CAST(POPULATION AS FLOAT)))*100 AS POPULATION_INFECTED_PERCENT
  FROM COVID_DEATH_DATA
  WHERE CONTINENT IS NOT NULL
  GROUP BY LOCATION, POPULATION
  ORDER BY POPULATION_INFECTED_PERCENT DESC NULLS LAST
;	
--- Query 2C ---
SELECT LOCATION, MAX(TOTAL_DEATHS) AS TOTAL_DEATH_COUNT
  FROM COVID_DEATH_DATA
  WHERE CONTINENT IS NOT NULL
  GROUP BY LOCATION, POPULATION
  ORDER BY TOTAL_DEATH_COUNT DESC NULLS LAST
;
--- Query 2D ---
 SELECT CONTINENT, MAX(TOTAL_DEATHS) AS HIGHEST_DEATH_COUNT, MAX((CAST(TOTAL_DEATHS AS FLOAT)/CAST(POPULATION AS FLOAT)))*100 AS MORTALITY_RATE
  FROM COVID_DEATH_DATA
  WHERE CONTINENT IS NOT NULL
  GROUP BY CONTINENT
  ORDER BY HIGHEST_DEATH_COUNT DESC LIMIT 1
;
--- Query 3A ---
SELECT DATE, SUM(NEW_CASES) AS TOTAL_GLOBAL_CASES, SUM(NEW_DEATHS) AS TOTAL_GLOBAL_DEATHS, SUM(CAST(NEW_DEATHS AS FLOAT))/SUM(CAST(NEW_CASES AS FLOAT))*100 AS DEATH_PERCENTAGE
  FROM COVID_DEATH_DATA
  WHERE CONTINENT IS NOT NULL
  GROUP BY DATE
  ORDER BY DATE
;
--- Query 3B ---
SELECT SUM(NEW_CASES) AS TOTAL_GLOBAL_CASES, SUM(NEW_DEATHS) AS TOTAL_GLOBAL_DEATHS, SUM(CAST(NEW_DEATHS AS FLOAT))/SUM(CAST(NEW_CASES AS FLOAT))*100 AS DEATH_PERCENTAGE
  FROM COVID_DEATH_DATA
  WHERE CONTINENT IS NOT NULL
;
--- Query 3C ---
WITH
   POPVSVAC (
    CONTINENT,
    LOCATION,
    DATE,
    POPULATION,
    NEW_VACCINATIONS,
    ROLLING_PPL_VACCINATED
  )
AS 
(
  SELECT CD.CONTINENT, CD.LOCATION, CD.DATE, CD.POPULATION, CV.NEW_VACCINATIONS, SUM(CAST(CV.NEW_VACCINATIONS AS FLOAT)) OVER (PARTITION BY CD.LOCATION ORDER BY CD.LOCATION, CD.DATE) AS ROLLING_PPL_VACCINATED
  FROM COVID_DEATH_DATA CD
  FULL OUTER JOIN COVID_VACCINE_DATA AS CV ON CD.LOCATION = CV.LOCATION AND CD.DATE = CV.DATE
  WHERE CD.CONTINENT IS NOT NULL
  ORDER BY 2,3
)
  SELECT *, (ROLLING_PPL_VACCINATED/POPULATION)*100 AS PERCENT_OF_POP_VAXED
  FROM POPVSVAC
  GROUP BY CONTINENT, LOCATION, DATE, POPULATION, NEW_VACCINATIONS, ROLLING_PPL_VACCINATED
  ORDER BY 2, 3;
;
--- Query 4D ---
CREATE VIEW PERCENT_POP_VAXED
SELECT CD.CONTINENT, CD.LOCATION, CD.DATE, CD.POPULATION, CV.NEW_VACCINATIONS, SUM(CAST(CV.NEW_VACCINATIONS AS FLOAT)) OVER (PARTITION BY CD.LOCATION ORDER BY CD.LOCATION, CD.DATE) AS ROLLING_PPL_VACCINATED
  FROM COVID_DEATH_DATA CD
  FULL OUTER JOIN COVID_VACCINE_DATA AS CV ON CD.LOCATION = CV.LOCATION AND CD.DATE = CV.DATE
  WHERE CD.CONTINENT IS NOT NULL
;

